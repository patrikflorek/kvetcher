#:import dp kivy.metrics.dp


<OverlayItem>:
    data: {'name': '', 'active': True, 'opacity': 1}
    orientation: 'horizontal'
    size_hint_y: None
    height: '32dp'
    ToggleButton:
        state: 'down' if root.data['active'] else 'normal'
        text: '-' if self.state == 'normal' else 'A'
        size_hint_x: None
        width: '32dp'
        on_state: root.data['active'] = (self.state == 'down')
    ToggleButton:
        state: 'down' if root.data['opacity'] else 'normal'
        text: '-' if self.state == 'normal' else 'V'
        size_hint_x: None
        width: '32dp'
        on_state: root.data['opacity'] = float(self.state == 'down')
    TextInput:
        text: root.data['name']
        multiline: False
        on_text_validate: root.data['name'] = self.text
    Button:
        text: 'Clear'
        size_hint_x: None
        width: self.texture_size[0] + dp(16)
        on_release: root.data['texture'] = None
    Button:
        text: 'Delete'
        size_hint_x: None
        width: self.texture_size[0] + dp(16)
        on_release: root.delete()


<OverlaysPopup>:
    overlay_items_container: overlay_items_container
    title: 'Overlays settings'
    size_hint_y: 0.9
    BoxLayout:
        orientation: 'vertical'
        ScrollView:
            BoxLayout:
                id: overlay_items_container
                orientation: 'vertical'
                padding: '8dp'
                spacing: '4dp'
                size_hint_y: None
                height: self.minimum_height
        BoxLayout:
            orientation: 'vertical'
            spacing: '16dp'
            Button:
                text: 'Add overlay'
                size_hint_y: None
                height: '32dp'
                on_release: root.add_new()
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: '32dp'
                Button:
                    text: 'Dismiss'
                    on_release: root.dismiss()
                Button:
                    text: 'Save'
                    background_color: 0, 1, 0, 1
                    on_release: app.update_overlays_data(root.new_overlays_data_list)
